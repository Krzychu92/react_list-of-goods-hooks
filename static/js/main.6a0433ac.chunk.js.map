{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","sortType","setSortType","isReversed","setIsReversed","goodies","goods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","getReorderedGoods","useEffect","className","type","onClick","undefined","map","good","ReactDOM","render","document","getElementById"],"mappings":"uOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAiCK,IAAMC,EAAgB,WAC3B,MAAgCC,mBAAS,QAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAjCD,SACLC,EACAL,EACAE,GAGA,IAAMI,EAAY,YAAOD,GAqBzB,OAnBAC,EAAaC,MAAK,SAACC,EAAeC,GAChC,MAAiB,aAAbT,EACKQ,EAAME,cAAcD,GAGZ,WAAbT,EACKQ,EAAMG,OAASF,EAAME,OAIrB,KAKPT,GACFI,EAAaM,UAGRN,EAMSO,CAAkBhB,EAAiBG,EAAUE,GAI7D,OAFAY,qBAAU,cAAU,CAACZ,IAGnB,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACe,aAAbf,EACI,0BACA,iBAENiB,QAAS,kBAAMhB,EAAY,aAP7B,iCAYA,wBACEe,KAAK,SACLD,UACe,WAAbf,EACI,oBACA,6BAENiB,QAAS,kBAAMhB,EAAY,WAP7B,4BAYA,wBACEe,KAAK,SACLD,UACGb,EAA4C,oBAA/B,6BAEhBe,QAAS,kBAAMd,GAAeD,IALhC,qBASc,SAAbF,GAAuBE,EACtB,wBACEc,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPd,GAAc,GACdF,EAAY,SALhB,wBAUEiB,KAGN,6BACE,6BACGd,EAAQe,KAAI,SAACC,GACZ,OACE,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCzGtCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6a0433ac.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"bulma/css/bulma.css\";\nimport \"./App.scss\";\n\nexport const goodsFromServer = [\n  \"Dumplings\",\n  \"Carrot\",\n  \"Eggs\",\n  \"Ice cream\",\n  \"Apple\",\n  \"Bread\",\n  \"Fish\",\n  \"Honey\",\n  \"Jam\",\n  \"Garlic\",\n];\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: string,\n  isReversed: boolean,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1: string, good2: string): number => {\n    if (sortType === \"ALPHABET\") {\n      return good1.localeCompare(good2);\n    }\n\n    if (sortType === \"LENGTH\") {\n      return good1.length - good2.length;\n    }\n\n    if (sortType === \"NONE\") {\n      return 0;\n    }\n\n    return 0;\n  });\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(\"NONE\");\n  const [isReversed, setIsReversed] = useState(false);\n  const goodies = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  useEffect(() => {}, [isReversed]);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            sortType !== \"ALPHABET\"\n              ? \"button is-info is-light\"\n              : \"button is-info\"\n          }\n          onClick={() => setSortType(\"ALPHABET\")}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            sortType === \"LENGTH\"\n              ? \"button is-success\"\n              : \"button is-success is-light\"\n          }\n          onClick={() => setSortType(\"LENGTH\")}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            !isReversed ? \"button is-warning is-light\" : \"button is-warning\"\n          }\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n        {sortType !== \"NONE\" || isReversed ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReversed(false);\n              setSortType(\"NONE\");\n            }}\n          >\n            Reset\n          </button>\n        ) : undefined}\n      </div>\n\n      <ul>\n        <ul>\n          {goodies.map((good) => {\n            return (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            );\n          })}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}